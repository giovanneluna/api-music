version: "3.8"

services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: music-api
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        depends_on:
            - db
        networks:
            - api-network

    nginx:
        image: nginx:alpine
        container_name: music-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - api
        networks:
            - api-network

    db:
        image: mysql:8.0
        container_name: music-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: musicas
            MYSQL_USER: music_user
            MYSQL_PASSWORD: music_password
            MYSQL_ROOT_PASSWORD: root_password
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - music-db-data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - api-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: music-phpmyadmin
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_USER: root
            PMA_PASSWORD: root_password
        depends_on:
            - db
        ports:
            - "8080:80"
        networks:
            - api-network

networks:
    api-network:
        driver: bridge

volumes:
    music-db-data:
